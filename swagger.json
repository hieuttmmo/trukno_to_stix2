{
  "openapi": "3.0.0",
  "info": {
    "title": "TruKno-Api Beta",
    "description": "# Introduction\nVersion 1 of TruKno API\n- Base API URL - **https://api.trukno.com/v1**\n\n# Authentication\nTruKno APIs is using the **Bearer Authentication** security.\nBearer authentication (also called token authentication) is an HTTP authentication scheme that involves security tokens called bearer tokens The name “Bearer\nauthentication” can be understood as “give access to the bearer of this token.” The bearer token is a cryptic string, the token will be generated by the server in the response to the\n`/login` request. The client must send this token in the `Authorization` header when making requests to protected resources (`Authorization: Bearer <token>`)\n  - **Important Note** - You must have TruKno enterprise license to use the API, otherwise all requests will give 401 Error (Please Authenticate).\n\n<SecurityDefinitions />\n",
    "contact": {
      "name": "For any comments or feedback please contact us on",
      "url": "https://www.trukno.com",
      "email": "manish@trukno.com"
    },
    "version": "V1"
  },
  "servers": [
    {
      "url": "https://api.trukno.com/V1",
      "description": "SwaggerHub API Auto Mocking"
    }
  ],
  "security": [
    {
      "bearerAuth": [
        "access token from the login endpoint"
      ]
    }
  ],
  "tags": [
    {
      "name": "Login"
    },
    {
      "name": "Breaches"
    },
    {
      "name": "TTPs"
    },
    {
      "name": "Actors"
    },
    {
      "name": "Malware"
    },
    {
      "name": "CVEs"
    },
    {
      "name": "Detection Rules"
    },
    {
      "name": "Detection Chain"
    },
    {
      "name": "IOCs"
    },
    {
      "name": "News"
    },
    {
      "name": "Filters"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "Login"
        ],
        "description": "Make a `POST` request to `/login` providing both your TruKno Email and Password, if request succeeded the response object will contain the access `token` which is required in all TruKno endpoints, the token needs to be provided in the `Authorization` header, `{headers:{Authorization:Bearer <token>}}`<br /> - **Note** - The created `token` is valid for one day, after that you will need to create a new one.",
        "operationId": "/login",
        "requestBody": {
          "description": "The request body contains the required information to login.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "your TruKno Email"
                  },
                  "password": {
                    "type": "string",
                    "example": "Your Password"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User found and token is sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginResponseSchema"
                }
              }
            }
          },
          "400": {
            "description": "Error 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/breaches/list": {
      "get": {
        "tags": [
          "Breaches"
        ],
        "description": "Get a list of most recent breaches (10 items by default you can change the limit using the `limit` parameter), you can search or/and filter the results using the request query parameters.",
        "operationId": "/breaches/list",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The amount of breaches to retrieve, must be between 1 - 100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to retrieve, must be greater than 0, default value is 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sets how the breaches will be sorted, it can be one of `breachdate`, `ttpscount`, `detectionscount` or `updatedate` the default value is \"ttpscount\"",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "breachdate"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Searches for breaches related to a specific keyword",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Kaseya"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filters the breaches by a specific category (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Endpoint Security"
            }
          },
          {
            "name": "industry",
            "in": "query",
            "description": "Filters the breaches by a specific industry (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Finance"
            }
          },
          {
            "name": "technology",
            "in": "query",
            "description": "Filters the breaches by a specific technology (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Windows"
            }
          },
          {
            "name": "malwareType",
            "in": "query",
            "description": "Filters the breaches by a specific malware type (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Ransomware"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Filters the breaches by a specific period for example `date=1 Day` (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "7 Days"
            }
          },
          {
            "name": "updatedAt",
            "in": "query",
            "description": "Filters the breaches by the last updated date for example `updatedAt=1 Day` (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1 Day"
            }
          },
          {
            "name": "hasRules",
            "in": "query",
            "description": "Getting only breaches that have detection rules, the value can be `true` or `false`, by default the value is `false`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": true
            }
          },
          {
            "name": "hasTTPs",
            "in": "query",
            "description": "Getting only breaches that have detection rules, the value can be `true` or `false`, by default the value is `false`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Breaches found and sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/breachesList"
                }
              }
            }
          },
          "400": {
            "description": "Error 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "Error 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          }
        }
      }
    },
    "/breches/:id": {
      "get": {
        "tags": [
          "Breaches"
        ],
        "description": "Get a detailed data for a specific Breach.",
        "operationId": "/breches/:id",
        "responses": {
          "200": {
            "description": "Breach found and sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/breachDetails"
                }
              }
            }
          },
          "400": {
            "description": "Error 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "Error 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          }
        }
      }
    },
    "/ttps/list": {
      "get": {
        "tags": [
          "TTPs"
        ],
        "description": "Get a list of most used TTPs (10 items by default you can change the limit using the `limit` parameter), you can search or/and filter the results using the request query parameters.",
        "operationId": "/ttps/list",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The amount of TTPs to retrieve, must be between 1 - 100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to retrieve, must be greater than 0, default value is 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sets how the TTPs will be sorted, it can be one of \"breachdate\" or \"breachcount\", by default the items will be sorted by breaches count.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "breachdate"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Searches for TTPs by a specific keyword",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Kaseya"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filters the TTPs by a specific category (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Endpoint Security"
            }
          },
          {
            "name": "industry",
            "in": "query",
            "description": "Filters the TTPs by a specific industry (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Finance"
            }
          },
          {
            "name": "technology",
            "in": "query",
            "description": "Filters the TTPs by a specific technology (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Windows"
            }
          },
          {
            "name": "malwareType",
            "in": "query",
            "description": "Filters the TTPs by a specific malware type (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Ransomware"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Filters the TTPs by a specific period for example `date=1 Day` (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "7 Days"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TTPs found and sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ttpsList"
                }
              }
            }
          },
          "400": {
            "description": "Error 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "Error 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          }
        }
      }
    },
    "/ttps/:id": {
      "get": {
        "tags": [
          "TTPs"
        ],
        "description": "Get a detailed data for a specific TTP.",
        "operationId": "/ttps/:id",
        "responses": {
          "200": {
            "description": "TTP found and sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ttpDetails"
                }
              }
            }
          },
          "400": {
            "description": "Error 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "Error 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          }
        }
      }
    },
    "/actors/list": {
      "get": {
        "tags": [
          "Actors"
        ],
        "description": "Get a list of most active Actors (10 items by default you can change the limit using the `limit` parameter), you can search or/and filter the results using the request query parameters.",
        "operationId": "/actors/list",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The amount of Actors to retrieve, must be between 1 - 100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to retrieve, must be greater than 0, default value is 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sets how the Actors will be sorted, it can be one of \"breachdate\" or \"breachcount\", by default the items will be sorted by breaches count",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "breachdate"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Searches for Actors by a specific keyword",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Kaseya"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filters the Actors by a specific category (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Endpoint Security"
            }
          },
          {
            "name": "industry",
            "in": "query",
            "description": "Filters the Actors by a specific industry (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Finance"
            }
          },
          {
            "name": "technology",
            "in": "query",
            "description": "Filters the Actors by a specific technology (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Windows"
            }
          },
          {
            "name": "malwareType",
            "in": "query",
            "description": "Filters the Actors by a specific malware type (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Ransomware"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Filters the Actors by a specific period for example `date=1 Day` (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "7 Days"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actors found and sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/actorsList"
                }
              }
            }
          },
          "400": {
            "description": "Error 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "Error 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          }
        }
      }
    },
    "/actors/:id": {
      "get": {
        "tags": [
          "Actors"
        ],
        "description": "Get a detailed data for a specific Actor.",
        "operationId": "/actors/:id",
        "responses": {
          "200": {
            "description": "Actor found and sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/actorDetails"
                }
              }
            }
          },
          "400": {
            "description": "Error 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "Error 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          }
        }
      }
    },
    "/malware/list": {
      "get": {
        "tags": [
          "Malware"
        ],
        "description": "Get a list of most used Malware (10 items by default you can change the limit using the `limit` parameter), you can search or/and filter the results using the request query parameters.",
        "operationId": "/malware/list",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The amount of Malware items to retrieve, must be between 1 - 100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to retrieve, must be greater than 0, default value is 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sets how the Malware list will be sorted, it can be one of \"breachdate\" or \"breachcount\", by default the items will be sorted by breaches count",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "breachdate"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search the Malware results by a specific keyword",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Kaseya"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filters the Malware results by a specific category (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Endpoint Security"
            }
          },
          {
            "name": "industry",
            "in": "query",
            "description": "Filters the Malware results by a specific industry (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Finance"
            }
          },
          {
            "name": "technology",
            "in": "query",
            "description": "Filters the Malware results by a specific technology (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Windows"
            }
          },
          {
            "name": "malwareType",
            "in": "query",
            "description": "Filters the Malware results by a specific malware type (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Ransomware"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Filters the Malware results by a specific period for example `date=1 Day` (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "7 Days"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Malware found and sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/malwareList"
                }
              }
            }
          },
          "400": {
            "description": "Error 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "Error 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          }
        }
      }
    },
    "/malware/:id": {
      "get": {
        "tags": [
          "Malware"
        ],
        "description": "Get a detailed data for a specific Malware.",
        "operationId": "/malware/:id",
        "responses": {
          "200": {
            "description": "Malware found and sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/malwareDetails"
                }
              }
            }
          },
          "400": {
            "description": "Error 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "Error 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          }
        }
      }
    },
    "/cves/list": {
      "get": {
        "tags": [
          "CVEs"
        ],
        "description": "Get a list of most used CVEs (10 items by default you can change the limit using the `limit` parameter), you can search or/and filter the results using the request query parameters.",
        "operationId": "/cves/list",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The amount of CVEs to retrieve, must be between 1 - 100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to retrieve, must be greater than 0, default value is 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sets how the CVEs will be sorted, it can be one of \"breachdate\" or \"breachcount\", by default the items will be sorted by breaches count",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "breachdate"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Searches for CVEs related to a specific keyword",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Kaseya"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filters the CVEs results by a specific category (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Endpoint Security"
            }
          },
          {
            "name": "industry",
            "in": "query",
            "description": "Filters the CVEs results by a specific industry (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Finance"
            }
          },
          {
            "name": "technology",
            "in": "query",
            "description": "Filters the CVEs results by a specific technology (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Windows"
            }
          },
          {
            "name": "malwareType",
            "in": "query",
            "description": "Filters the CVEs results by a specific malware type (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Ransomware"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Filters the CVEs by a specific period for example `date=1 Day` (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "7 Days"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CVEs found and sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cvesList"
                }
              }
            }
          },
          "400": {
            "description": "Error 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "Error 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          }
        }
      }
    },
    "/cves/:id": {
      "get": {
        "tags": [
          "CVEs"
        ],
        "description": "Get a detailed data for a specific CVE.",
        "operationId": "/cves/:id",
        "responses": {
          "200": {
            "description": "CVE found and sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cveDetails"
                }
              }
            }
          },
          "400": {
            "description": "Error 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "Error 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          }
        }
      }
    },
    "/cves/analyze": {
      "post": {
        "tags": [
          "CVEs"
        ],
        "description": "Get the latest breach date and breaches count for a given `array` of CVEs.",
        "operationId": "/cves/analyze",
        "requestBody": {
          "description": "The request body contains a list of CVEs to be checked and analyzed.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cvesAnalyzeBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "CVEs found and sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cveAnalyze"
                }
              }
            }
          },
          "400": {
            "description": "Error 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "Error 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          }
        }
      }
    },
    "/detections/list": {
      "get": {
        "tags": [
          "Detection Rules"
        ],
        "description": "Get a list of detections rules based on a specific filters CVEs (10 items by default you can change the limit using the `limit` parameter), you can search or/and filter the results using the request query parameters.",
        "operationId": "/detections/list",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The amount of detections to retrieve, must be between 1 - 100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to retrieve, must be greater than 0, default value is 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sets how the detections will be sorted, it can be one of `date`, `updatedate`, `malware`, `actors`, `detectionChains` or `industry` by default the items will be sorted by date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "date"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Searches for detections related to a specific keyword",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Ransomware"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filters the detections results by a specific category (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Endpoint Security"
            }
          },
          {
            "name": "industry",
            "in": "query",
            "description": "Filters the detections results by a specific industry (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Finance"
            }
          },
          {
            "name": "technology",
            "in": "query",
            "description": "Filters the detections results by a specific technology (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Windows"
            }
          },
          {
            "name": "malwareType",
            "in": "query",
            "description": "Filters the detections results by a specific malware type (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Ransomware"
            }
          },
          {
            "name": "time",
            "in": "query",
            "description": "Filters the detections by a specific period for example `time=1 Day` (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "7 Days"
            }
          },
          {
            "name": "updatedAt",
            "in": "query",
            "description": "Filters the detections by the update date for example `updateAt=1 Day` (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1 Day"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detections found and sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/detectionsListItem"
                      }
                    },
                    "totalCount": {
                      "type": "number",
                      "example": "the total number of detections found based on the current applied filters"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "Error 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          }
        }
      }
    },
    "/detections/:id": {
      "get": {
        "tags": [
          "Detection Rules"
        ],
        "description": "Get a detailed data for a specific Detection.",
        "operationId": "/detections/:id",
        "responses": {
          "200": {
            "description": "CVE found and sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/detectionDetails"
                }
              }
            }
          },
          "400": {
            "description": "Error 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "Error 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          }
        }
      }
    },
    "/chain/:id": {
      "get": {
        "tags": [
          "Detection Chain"
        ],
        "description": "Get a detailed detection chain for a specific Breach.",
        "operationId": "/chain/:id",
        "responses": {
          "200": {
            "description": "Detection chain found and sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/detectionChainSchema"
                }
              }
            }
          },
          "400": {
            "description": "Error 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "Error 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          }
        }
      }
    },
    "/chain/convert/:id": {
      "post": {
        "tags": [
          "Detection Chain"
        ],
        "description": "Get the query code for all detection chain related detection rules, providing the desired converter and target.",
        "operationId": "/chain/convert/:id",
        "requestBody": {
          "description": "The request body contains the required information to convert chain detection rules.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/chainQueryCodeRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Detection chain found and sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chainQueryCodeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "Error 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          }
        }
      }
    },
    "/iocs/list": {
      "get": {
        "tags": [
          "IOCs"
        ],
        "description": "Get a list of IOCs based on a specific filters, you can search or/and filter the results using the request query parameters.",
        "operationId": "/iocs/list",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "the type of IOCs to retrieve, it can be one of \"ips\", \"domains\", \"hashesMd5\", \"hashesSha1\", \"hashesSha256\", \"mitre\",  or \"cves\" by default the value is \"ips\"",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "hashesMd5"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The amount of IOCs to retrieve, must be between 1 - 100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to retrieve, must be greater than 0, default value is 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sets how the detections will be sorted, it can be one of \"breachdate\" or \"breachcount\" by default the items will be sorted by breach count",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "date"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Searches for a specific IOC",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "165.22.16.135"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filters the IOCs results by a specific category (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Endpoint Security"
            }
          },
          {
            "name": "industry",
            "in": "query",
            "description": "Filters the IOCs results by a specific industry (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Finance"
            }
          },
          {
            "name": "technology",
            "in": "query",
            "description": "Filters the IOCs results by a specific technology (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Windows"
            }
          },
          {
            "name": "malwareType",
            "in": "query",
            "description": "Filters the IOCs results by a specific malware type (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Ransomware"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Filters the IOCs by a specific period for example `date=1 Day` (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "7 Days"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detections found and sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/iocsListSchema"
                }
              }
            }
          },
          "400": {
            "description": "Error 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "Error 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          }
        }
      }
    },
    "/iocs/breach/:id": {
      "get": {
        "tags": [
          "IOCs"
        ],
        "description": "Get all IOCs for a specific breach.",
        "operationId": "/iocs/breach/:id",
        "responses": {
          "200": {
            "description": "Breach iocs found and sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/breachIOCsSchema"
                }
              }
            }
          },
          "400": {
            "description": "Error 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "Error 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          }
        }
      }
    },
    "/news/list": {
      "get": {
        "tags": [
          "News"
        ],
        "description": "Get a list of most recent news articles (25 items by default you can change the limit using the `limit` parameter), you can search or/and filter the results using the request query parameters.",
        "operationId": "/news/list",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The amount of news articles to retrieve, must be between 1 - 100",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to retrieve, must be greater than 0, default value is 1",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Searches for news articles with a specific keyword",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Kaseya"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filters the news articles by a specific category (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Endpoint Security"
            }
          },
          {
            "name": "industry",
            "in": "query",
            "description": "Filters the news articles by a specific industry (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Finance"
            }
          },
          {
            "name": "technology",
            "in": "query",
            "description": "Filters the news articles by a specific technology (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Windows"
            }
          },
          {
            "name": "malwareType",
            "in": "query",
            "description": "Filters the news articles by a specific malware type (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "Ransomware"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Filters the news articles by a specific period for example `date=1 Day` (get the list of the available options using the `/filters` request).",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "7 Days"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "news articles found and sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/newsListSchema"
                }
              }
            }
          },
          "400": {
            "description": "Error 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "Error 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          }
        }
      }
    },
    "/filters": {
      "get": {
        "tags": [
          "Filters"
        ],
        "description": "Get all available filters (industries, technologies, categories, ....).",
        "operationId": "/filters",
        "responses": {
          "200": {
            "description": "Filter options are sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/filters"
                }
              }
            }
          },
          "400": {
            "description": "Error 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "Error 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "400": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "bad request"
          }
        },
        "description": "Schema for 400"
      },
      "401": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Please Authenticate"
          }
        },
        "description": "Schema for 401"
      },
      "loginResponseSchema": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "dGVkX1/KbzKNtn81t1n19EDYuYZpaQswgAkKvkwQ7h8YJnsdfr7ter7K5EapkA5yBdBGCLXe6ZfdQ3szRUYbdbrNsLNG02oO7ssUfjp07DrJsdCUgEt2j"
          }
        },
        "description": "Schema for login Response"
      },
      "breachesList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/breachesListItem"
        }
      },
      "breachesListItem": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "Breach id"
          },
          "title": {
            "type": "string",
            "example": "Breach title"
          },
          "description": {
            "type": "string",
            "example": "Breach description"
          },
          "date": {
            "type": "string",
            "example": "Publish date of the breach article"
          },
          "url": {
            "type": "string",
            "example": "URL of the breach article"
          },
          "source": {
            "type": "string",
            "example": "Source of the breach article"
          },
          "author": {
            "type": "string",
            "example": "Creator (writer) of the article"
          },
          "affectedIndustries": {
            "type": "string",
            "example": "Affected industries mentioned in the article"
          },
          "affectedTechnologies": {
            "type": "string",
            "example": "Affected technologies mentioned in the article"
          },
          "ttpsCount": {
            "type": "number"
          },
          "detectionRulesCount": {
            "type": "number",
            "example": "The number of detection rules related to the breach"
          }
        },
        "description": "Breach List items"
      },
      "newsListSchema": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/newsListItem"
        }
      },
      "newsListItem": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "Article id"
          },
          "title": {
            "type": "string",
            "example": "Article title"
          },
          "description": {
            "type": "string",
            "example": "Article description"
          },
          "date": {
            "type": "string",
            "example": "Publish date of the article"
          },
          "url": {
            "type": "string",
            "example": "URL of the article"
          },
          "source": {
            "type": "string",
            "example": "Source of the article"
          },
          "author": {
            "type": "string",
            "example": "Creator (writer) of the article"
          },
          "affectedIndustries": {
            "type": "string",
            "example": "Affected industries mentioned in the article"
          },
          "affectedTechnologies": {
            "type": "string",
            "example": "Affected technologies mentioned in the article"
          },
          "ttpsCount": {
            "type": "number"
          }
        },
        "description": "Article List items"
      },
      "breachDetails": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "Breach id"
          },
          "title": {
            "type": "string",
            "example": "Breach title"
          },
          "description": {
            "type": "string",
            "example": "Breach description"
          },
          "date": {
            "type": "string",
            "example": "Publish date of the breach article"
          },
          "url": {
            "type": "string",
            "example": "URL of the breach article"
          },
          "source": {
            "type": "string",
            "example": "Source of the breach article"
          },
          "author": {
            "type": "string",
            "example": "Creator (writer) of the article"
          },
          "affectedIndustries": {
            "type": "string",
            "example": "Affected industries mentioned in the article"
          },
          "affectedTechnologies": {
            "type": "string",
            "example": "Affected technologies mentioned in the article"
          },
          "category": {
            "type": "string",
            "example": "Categories of the breach"
          },
          "relatedTTPs": {
            "type": "string",
            "example": "ABreach related TTPs"
          },
          "relatedActors": {
            "type": "string",
            "example": "Breach related Actors"
          },
          "relatedMalware": {
            "type": "string",
            "example": "Breach related Malware"
          },
          "IOCs": {
            "type": "string",
            "example": "Breach related IOCs"
          }
        },
        "description": "Schema for breach detail"
      },
      "ttpsList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ttpsListItem"
        }
      },
      "ttpsListItem": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "TTP id"
          },
          "latestBreachDate": {
            "type": "string",
            "example": "TTP latest breach Date"
          },
          "breachCount": {
            "type": "string",
            "example": "The number of breaches related to the TTP"
          },
          "affectedIndustries": {
            "type": "string",
            "example": "Affected industries related to the TTP"
          },
          "affectedTechnologies": {
            "type": "string",
            "example": "Affected technologies related to the TTP"
          },
          "title": {
            "type": "string",
            "example": "TTP Title"
          },
          "description": {
            "type": "string",
            "example": "TTP description"
          },
          "stage": {
            "type": "string",
            "example": "MITRE attack stage, example (03- Initial Access)"
          }
        },
        "description": "TTPs List schema"
      },
      "ttpDetails": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "TTP id"
          },
          "title": {
            "type": "string",
            "example": "TTP title"
          },
          "description": {
            "type": "string",
            "example": "TTP description"
          },
          "number": {
            "type": "string",
            "example": "MITRE number"
          },
          "latestBreachDate": {
            "type": "string",
            "example": "TTP latest breach Date"
          },
          "breachCount": {
            "type": "string",
            "example": "The number of breaches related to the TTP"
          },
          "affectedIndustries": {
            "type": "string",
            "example": "Affected industries related to the TTP"
          },
          "affectedTechnologies": {
            "type": "string",
            "example": "Affected technologies related to the TTP"
          },
          "actors": {
            "type": "string",
            "example": "TTP related Actors"
          },
          "malware": {
            "type": "string",
            "example": "TTP related Malware"
          },
          "relatedIocs": {
            "type": "string",
            "example": "TTP related IOCs"
          },
          "stage": {
            "type": "string",
            "example": "MITRE attack stage, example (03- Initial Access)"
          }
        },
        "description": "Schema TTP Details"
      },
      "actorsList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/actorsListItem"
        }
      },
      "actorsListItem": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "Actor id"
          },
          "latestBreachDate": {
            "type": "string",
            "example": "Actor latest breach Date"
          },
          "breachCount": {
            "type": "string",
            "example": "The number of breaches related to the Actor"
          },
          "affectedIndustries": {
            "type": "string",
            "example": "Affected industries that were hit by the actor"
          },
          "affectedTechnologies": {
            "type": "string",
            "example": "Affected technologies that were hit by the actor"
          },
          "title": {
            "type": "string",
            "example": "Actor title"
          },
          "description": {
            "type": "string",
            "example": "Actor description"
          },
          "location": {
            "type": "string",
            "example": "Actor location"
          }
        },
        "description": "Actors list schema"
      },
      "actorDetails": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "Actor id"
          },
          "title": {
            "type": "string",
            "example": "Actor title"
          },
          "description": {
            "type": "string",
            "example": "Actor description"
          },
          "location": {
            "type": "string",
            "example": "Actor location"
          },
          "latestBreachDate": {
            "type": "string",
            "example": "Actor latest breach Date"
          },
          "breachCount": {
            "type": "string",
            "example": "The number of breaches related to the Actor"
          },
          "affectedIndustries": {
            "type": "string",
            "example": "Affected industries that were hit by the actor"
          },
          "affectedTechnologies": {
            "type": "string",
            "example": "Affected technologies that were hit by the actor"
          },
          "relatedBreaches": {
            "type": "string",
            "example": "Actor related Breaches"
          },
          "ttps": {
            "type": "string",
            "example": "Actor related TTPs"
          },
          "malware": {
            "type": "string",
            "example": "Actor related Malware"
          },
          "relatedIocs": {
            "type": "string",
            "example": "Actor related IOCs"
          }
        },
        "description": "Schema for Actor details"
      },
      "malwareList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/malwareListItem"
        }
      },
      "malwareListItem": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "Malware id"
          },
          "latestBreachDate": {
            "type": "string",
            "example": "Malware latest breach Date"
          },
          "breachCount": {
            "type": "string",
            "example": "The number of breaches related to the Malware"
          },
          "affectedIndustries": {
            "type": "string",
            "example": "Affected industries that were breached by the Malware"
          },
          "affectedTechnologies": {
            "type": "string",
            "example": "Affected technologies that were breached by the Malware"
          },
          "title": {
            "type": "string",
            "example": "Malware title"
          },
          "description": {
            "type": "string",
            "example": "Malware description"
          }
        },
        "description": "Malware Item schema"
      },
      "malwareDetails": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "Malware id"
          },
          "title": {
            "type": "string",
            "example": "Malware title"
          },
          "description": {
            "type": "string",
            "example": "Malware description"
          },
          "relatedBreaches": {
            "type": "string",
            "example": "Malware related Breaches"
          },
          "latestBreachDate": {
            "type": "string",
            "example": "Malware latest breach Date"
          },
          "breachCount": {
            "type": "string",
            "example": "The number of breaches related to the Malware"
          },
          "affectedIndustries": {
            "type": "string",
            "example": "Affected industries that were breached by the Malware"
          },
          "affectedTechnologies": {
            "type": "string",
            "example": "Affected technologies that were breached by the Malware"
          },
          "actors": {
            "type": "string",
            "example": "Malware related Actors"
          },
          "ttps": {
            "type": "string",
            "example": "Malware related TTPs"
          },
          "relatedIocs": {
            "type": "string",
            "example": "Malware related IOCs"
          }
        },
        "description": "Schema for Malware Details"
      },
      "cvesList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/cveListItem"
        }
      },
      "cveListItem": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "CVE id"
          },
          "latestBreachDate": {
            "type": "string",
            "example": "CVE latest breach Date"
          },
          "breachCount": {
            "type": "string",
            "example": "The number of breaches related to the CVE"
          }
        },
        "description": "CVE Item schema"
      },
      "cveDetails": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "CVE id"
          },
          "latestBreachDate": {
            "type": "string",
            "example": "CVE latest breach Date"
          },
          "breachCount": {
            "type": "string",
            "example": "The number of breaches related to the CVE"
          },
          "relatedBreaches": {
            "type": "string",
            "example": "CVE related Breaches"
          },
          "affectedIndustries": {
            "type": "string",
            "example": "Affected industries related to the CVE"
          },
          "affectedTechnologies": {
            "type": "string",
            "example": "Affected technologies related to the CVE"
          },
          "relatedActors": {
            "type": "string",
            "example": "CVE related Actors"
          },
          "relatedTTPs": {
            "type": "string",
            "example": "CVE related TTPs"
          },
          "relatedMalware": {
            "type": "string",
            "example": "CVE related Malware"
          },
          "relatedIps": {
            "type": "string",
            "example": "CVE related IPs"
          },
          "relatedDomains": {
            "type": "string",
            "example": "CVE related Domains"
          },
          "relatedHashesMd5": {
            "type": "string",
            "example": "CVE related MD5 Hashes"
          },
          "relatedHashesSha1": {
            "type": "string",
            "example": "CVE related SHA1 Hashes"
          },
          "relatedHashesSha256": {
            "type": "string",
            "example": "CVE related SHA256 Hashes"
          }
        },
        "description": "Schema for CVE details"
      },
      "cveAnalyze": {
        "type": "array",
        "example": [
          {
            "_id": "CVE-2021-26855",
            "breachCount": 60,
            "latestBreachDate": "2021-07-23T19:15:05.000Z"
          },
          {
            "_id": "CVE-2021-27065",
            "breachCount": 50,
            "latestBreachDate": "2021-07-23T19:15:05.000Z"
          },
          {
            "_id": "CVE-2021-26858",
            "breachCount": 40,
            "latestBreachDate": "2021-07-23T19:15:05.000Z"
          }
        ],
        "items": {
          "$ref": "#/components/schemas/cveAnalyzeItem"
        }
      },
      "cveAnalyzeItem": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "CVE id"
          },
          "latestBreachDate": {
            "type": "string",
            "example": "CVE latest breach Date"
          },
          "breachCount": {
            "type": "string",
            "example": "The number of breaches related to the CVE"
          }
        },
        "description": "CVE Item schema"
      },
      "cvesAnalyzeBody": {
        "type": "object",
        "properties": {
          "cves": {
            "type": "array",
            "example": [
              "CVE-2021-26855",
              "CVE-2021-27065",
              "CVE-2021-26858"
            ],
            "items": {
              "$ref": "#/components/schemas/cveItem"
            }
          }
        }
      },
      "cveItem": {
        "type": "string",
        "example": "CVE-2021-26855"
      },
      "filters": {
        "type": "object",
        "properties": {
          "category": {
            "type": "array",
            "example": "Array of available category filter options",
            "items": {
              "type": "string"
            }
          },
          "industry": {
            "type": "array",
            "example": "Array of available industry filter options",
            "items": {
              "type": "string"
            }
          },
          "technology": {
            "type": "array",
            "example": "Array of available technology filter options",
            "items": {
              "type": "string"
            }
          },
          "malwareType": {
            "type": "array",
            "example": "Array of available malware type filter options",
            "items": {
              "type": "string"
            }
          },
          "date": {
            "type": "array",
            "example": "Array of available date filter options",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Schema for Filters"
      },
      "detectionsList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/detectionsListItem"
        }
      },
      "detectionsListItem": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "detection id"
          },
          "title": {
            "type": "string",
            "example": "the title of the detection"
          },
          "description": {
            "type": "string",
            "example": "the description of the detection"
          },
          "techniques": {
            "type": "string",
            "example": "an array of techniques used in the detection"
          },
          "references": {
            "type": "string",
            "example": "an array of references for the detection"
          },
          "products": {
            "type": "string",
            "example": "an array of the products related to the detection"
          },
          "logSources": {
            "type": "string",
            "example": "an array of the log sources"
          },
          "organization": {
            "type": "string",
            "example": "the organization that created the detection"
          },
          "githubCreationDate": {
            "type": "string",
            "example": "the date the detection was created on github"
          },
          "tags": {
            "type": "string",
            "example": "an array of tags for the detection"
          },
          "githubUrl": {
            "type": "string",
            "example": "the url of the detection on github"
          },
          "breaches": {
            "type": "string",
            "example": "an array of the ids of breaches related to the detection"
          },
          "industry": {
            "type": "string",
            "example": "an array of the industries related to the detection"
          },
          "malware": {
            "type": "string",
            "example": "an array of the malware related to the detection"
          },
          "actors": {
            "type": "string",
            "example": "an array of the actors related to the detection"
          },
          "detectionChains": {
            "type": "number",
            "example": "number of detection chains related to the detection"
          }
        },
        "description": "Detection Item schema"
      },
      "detectionDetails": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "detection id"
          },
          "title": {
            "type": "string",
            "example": "the title of the detection"
          },
          "description": {
            "type": "string",
            "example": "the description of the detection"
          },
          "techniques": {
            "type": "string",
            "example": "an array of techniques used in the detection"
          },
          "references": {
            "type": "string",
            "example": "an array of references for the detection"
          },
          "products": {
            "type": "string",
            "example": "an array of the products related to the detection"
          },
          "logSources": {
            "type": "string",
            "example": "an array of the log sources"
          },
          "organization": {
            "type": "string",
            "example": "the organization that created the detection"
          },
          "githubCreationDate": {
            "type": "string",
            "example": "the date the detection was created on github"
          },
          "tags": {
            "type": "string",
            "example": "an array of tags for the detection"
          },
          "githubUrl": {
            "type": "string",
            "example": "the url of the detection on github"
          },
          "breaches": {
            "type": "string",
            "example": "an array of the ids of breaches related to the detection"
          },
          "industry": {
            "type": "string",
            "example": "an array of the industries related to the detection"
          },
          "malware": {
            "type": "string",
            "example": "an array of the malware related to the detection"
          },
          "actors": {
            "type": "string",
            "example": "an array of the actors related to the detection"
          },
          "procedures": {
            "type": "string",
            "example": "an array of the procedures related to the detection"
          }
        },
        "description": "Detection Item schema"
      },
      "detectionChainSchema": {
        "type": "object",
        "properties": {
          "breachId": {
            "type": "string",
            "example": "the Id of the breach related to the detection chain"
          },
          "chain": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "ttpDetails": {
                  "$ref": "#/components/schemas/chainTTPDetails"
                },
                "rule": {
                  "$ref": "#/components/schemas/chainRule"
                }
              }
            }
          }
        },
        "description": "Detection Item schema"
      },
      "chainRule": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "detection id"
          },
          "title": {
            "type": "string",
            "example": "the title of the detection"
          },
          "description": {
            "type": "string",
            "example": "the description of the detection"
          },
          "techniques": {
            "type": "string",
            "example": "an array of techniques used in the detection"
          },
          "references": {
            "type": "string",
            "example": "an array of references for the detection"
          },
          "products": {
            "type": "string",
            "example": "an array of the products related to the detection"
          },
          "logSources": {
            "type": "string",
            "example": "an array of the log sources"
          },
          "organization": {
            "type": "string",
            "example": "the organization that created the detection"
          },
          "githubCreationDate": {
            "type": "string",
            "example": "the date the detection was created on github"
          },
          "tags": {
            "type": "string",
            "example": "an array of tags for the detection"
          },
          "githubUrl": {
            "type": "string",
            "example": "the url of the detection on github"
          }
        },
        "description": "Chain rule Item schema"
      },
      "chainQueryCodeRequestBody": {
        "type": "object",
        "properties": {
          "converter": {
            "type": "string",
            "description": "one of `sigma.io` or `uncoder.io`",
            "example": "sigma.io"
          },
          "target": {
            "type": "string",
            "description": "<h3>Sigma.io available targets</h3> <table><tr><td>elasticsearch</td></tr> <tr><td>insight_idr</td></tr> <tr><td>sentinelone_pq</td></tr> <tr><td>ibm-qradar-aql</td></tr> <tr><td>loki</td></tr> <tr><td>microsoft365defender</td></tr> <tr><td>opensearch</td></tr> <tr><td>qradar</td></tr> <tr><td>sentinelone</td></tr> <tr><td>splunk</td></tr> <tr><td>azure</td></tr> <tr><td>carbonblack</td></tr></table> <h3>Uncoder.io available targets</h3> <table><tr><td>opensearch-lucene-query</td><td>AWS OpenSearch Query</td></tr> <tr><td>athena-sql-query</td><td>AWS Athena Query (Security Lake)</td></tr> <tr><td>logscale-lql-query</td><td>Falcon LogScale Query</td></tr> <tr><td>logscale-lql-rule</td><td>Falcon LogScale Rule</td></tr> <tr><td>splunk-spl-query</td><td>Splunk Query</td></tr> <tr><td>splunk-spl-rule</td><td>Splunk Alert</td></tr> <tr><td>sentinel-kql-query</td><td>Microsoft Sentinel Query</td></tr> <tr><td>sentinel-kql-rule</td><td>Microsoft Sentinel Rule</td></tr> <tr><td>mde-kql-query</td><td>Microsoft Defender for Endpoint Query</td></tr> <tr><td>qradar-aql-query</td><td>IBM QRadar Query</td></tr> <tr><td>crowdstrike-spl-query</td><td>CrowdStrike Query</td></tr> <tr><td>elastic-lucene-query</td><td>Elasticsearch Query</td></tr> <tr><td>elastic-lucene-rule</td><td>Elasticsearch Rule</td></tr> <tr><td>elastalert-lucene-rule</td><td>ElastAlert Rule</td></tr> <tr><td>sigma-yml-rule</td><td>Sigma Rule</td></tr> <tr><td>chronicle-yaral-query</td><td>Chronicle Security Query</td></tr> <tr><td>chronicle-yaral-rule</td><td>Chronicle Security Rule</td></tr> <tr><td>graylog-lucene-query</td><td>Graylog Query</td></tr> <tr><td>fortisiem-rule</td><td>FortiSIEM Rule</td></tr> <tr><td>axon-ads-rule</td><td>LogRhythm Axon Rule</td></tr> <tr><td>axon-ads-query</td><td>LogRhythm Axon Query</td></tr></table>",
            "example": "insight_idr"
          },
          "conversionObject": {
            "type": "object",
            "properties": {
              "rule_type_01": {
                "type": "object",
                "properties": {
                  "OLD_NAME_01": {
                    "type": "string",
                    "example": "New_NAME_01"
                  },
                  "OLD_NAME_02": {
                    "type": "string",
                    "example": "New_NAME_02"
                  },
                  "OLD_NAME_03": {
                    "type": "string",
                    "example": "New_NAME_03"
                  }
                }
              },
              "rule_type_02": {
                "type": "object",
                "properties": {
                  "OLD_NAME_01": {
                    "type": "string",
                    "example": "New_NAME_01"
                  },
                  "OLD_NAME_02": {
                    "type": "string",
                    "example": "New_NAME_02"
                  },
                  "OLD_NAME_03": {
                    "type": "string",
                    "example": "New_NAME_03"
                  }
                }
              }
            }
          }
        }
      },
      "chainQueryCodeResponse": {
        "type": "object",
        "properties": {
          "ruleId": {
            "type": "string",
            "example": "detection Rule id"
          },
          "query": {
            "type": "string",
            "example": "The converted query code for the selected converter and target"
          },
          "target": {
            "type": "string",
            "example": "The provided target in the request"
          },
          "converter": {
            "type": "string",
            "example": "The provided converter in the request"
          },
          "edrURL": {
            "type": "string",
            "example": "The Fast EDR query URL including the converted query code"
          }
        },
        "description": "Chain query code response schema"
      },
      "chainTTPDetails": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "TTP (Threat) id"
          },
          "title": {
            "type": "string",
            "example": "the title of the TTP"
          },
          "name": {
            "type": "string",
            "example": "the name of the TTP"
          },
          "stage": {
            "type": "string",
            "example": "the stage of the TTP"
          },
          "TTPNumber": {
            "type": "string",
            "example": "the number of the TTP"
          },
          "procedure": {
            "type": "string",
            "example": "the how the ttp is used in the attack"
          }
        },
        "description": "Chain TTP Item schema"
      },
      "iocsListSchema": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/iocsListItem"
        }
      },
      "iocsListItem": {
        "type": "object",
        "properties": {
          "ioc": {
            "type": "string",
            "example": "The value of the IOC"
          },
          "type": {
            "type": "string",
            "example": "The type of the IOC (IP, Domain, Hash, ...)"
          },
          "breaches": {
            "type": "string",
            "example": "IDs array of breaches related to the IOC"
          },
          "latestBreach": {
            "type": "string",
            "example": "The latest breach date related to the IOC"
          },
          "industry": {
            "type": "string",
            "example": "An array of industries related to the IOC"
          },
          "malware": {
            "type": "string",
            "example": "An array of malware related to the IOC"
          },
          "actors": {
            "type": "string",
            "example": "An array of actors related to the IOC"
          },
          "breachesCount": {
            "type": "number",
            "example": "The number of breaches related to the IOC"
          },
          "industryCount": {
            "type": "number",
            "example": "The number of industries related to the IOC"
          },
          "malwareCount": {
            "type": "number",
            "example": "The number of malware related to the IOC"
          },
          "actorsCount": {
            "type": "number",
            "example": "The number of actors related to the IOC"
          }
        },
        "description": "Chain TTP Item schema"
      },
      "breachIOCsSchema": {
        "type": "object",
        "properties": {
          "ips": {
            "type": "string",
            "example": "Array of IPs related to the breach"
          },
          "domains": {
            "type": "string",
            "example": "array of domains related to the breach"
          },
          "hashesMd5": {
            "type": "string",
            "example": "array of MD5 hashes related to the breach"
          },
          "hashesSha1": {
            "type": "string",
            "example": "array of SHA1 hashes related to the breach"
          },
          "hashesSha256": {
            "type": "string",
            "example": "array of SHA256 hashes related to the breach"
          },
          "mitre": {
            "type": "string",
            "example": "array of MITRE related to the breach"
          },
          "cves": {
            "type": "string",
            "example": "array of CVEs related to the breach"
          },
          "actors": {
            "type": "string",
            "example": "array of actors related to the breach"
          },
          "breachTitle": {
            "type": "string",
            "example": "the title of the breach"
          },
          "breachDate": {
            "type": "string",
            "example": "the date of the breach"
          },
          "breachId": {
            "type": "string",
            "example": "the id of the breach"
          },
          "breachURL": {
            "type": "string",
            "example": "the URL of the breach"
          },
          "breachDescription": {
            "type": "string",
            "example": "the description of the breach"
          }
        },
        "description": "Chain TTP Item schema"
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}